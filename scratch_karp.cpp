#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define INF 10000000

int min(int x, int y) {
    return (x < y) ? x : y;
}

int tsp_held_karp(int dist[][12], int set[], int n, int pos) {
    int i;

    if (set[pos] == -1) {
        if (pos == n - 1)
            set[pos] = 0;
        else {
            set[pos] = INF;
            for (i = pos + 1; i < n; i++)
                set[pos] = min(set[pos], dist[pos][i] + tsp_held_karp(dist, set, n, i));
        }
    }

    return set[pos];
}

int main() {
    // int dist[10][10] = {
    //     {0, 2, 5, 10},
    //     {2, 0, 3, 15},
    //     {5, 3, 0, 20},
    //     {10, 15, 20, 0}
    // };

    // int i, n = 4, set[10] = {-1, -1, -1, -1};
    #define N 12
    
    int dist[12][12] = {
        {0, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60},
        {10, 0, 12, 18, 22, 28, 32, 38, 42, 48, 52, 58},
        {15, 12, 0, 8, 14, 20, 24, 30, 34, 40, 44, 50},
        {20, 18, 8, 0, 6, 12, 16, 22, 26, 32, 36, 42},
        {25, 22, 14, 6, 0, 8, 12, 18, 22, 28, 32, 38},
        {30, 28, 20, 12, 8, 0, 4, 10, 14, 20, 24, 30},
        {35, 32, 24, 16, 12, 4, 0, 6, 10, 16, 20, 26},
        {40, 38, 30, 22, 18, 10, 6, 0, 4, 10, 14, 20},
        {45, 42, 34, 26, 22, 14, 10, 4, 0, 6, 10, 16},
        {50, 48, 40, 32, 28, 20, 16, 10, 6, 0, 4, 10},
        {55, 52, 44, 36, 32, 24, 20, 14, 10, 4, 0, 6},
        {60, 58, 50, 42, 38, 30, 26, 20, 16, 10, 6, 0}
    };


    int i, n = N, set[12] = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

    printf("Minimum cost = %d\n", tsp_held_karp(dist, set, n, 0));

    return 0;
}
